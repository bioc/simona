% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dist.R
\name{shortest_distances_via_CA}
\alias{shortest_distances_via_CA}
\alias{longest_distances_via_LCA}
\alias{shortest_distances_directed}
\alias{longest_distances_directed}
\title{Distance on the DAG}
\usage{
shortest_distances_via_CA(dag, terms)

longest_distances_via_LCA(dag, terms)

shortest_distances_directed(dag, terms)

longest_distances_directed(dag, terms)
}
\arguments{
\item{dag}{An \code{ontology_DAG} object.}

\item{terms}{A vector of term names.}
}
\description{
Distance on the DAG
}
\details{
Denote two terms as $a$ and $b$, the common ancestor as $c$, the distance function $d()$ calculates the longest
distance or the shortest distance depending on the function.
\itemize{
\item \code{shortest_distances_via_CA()}: It calculates the smallest $d(c, a) + d(c, b)$ where $d()$ is the shortest distance between two terms. In this case,
$c$ is the NCA (nearest common ancestor) of $a$ and $b$.
\item \code{longest_distances_via_LCA()}: It calculates the largest $d(c, a) + d(c, b)$ where $d()$ is the longest distance between two terms. In this case,
$c$ is the LCA of $a$ and $b$.
\item \code{shortest_distances_directed()}: It calculates $d(a, b)$. The distance is only calculated when $a$ is an ancestor of $b$.
\item \code{longest_distances_directed()}: It calculates $d(a, b)$. The distance is only calculated when $a$ is an ancestor of $b$.
}
}
\examples{
parents  = c("a", "a", "b", "b", "c", "d")
children = c("b", "c", "c", "d", "e", "f")
dag = create_ontology_DAG(parents, children)
shortest_distances_via_CA(dag, letters[1:6])
longest_distances_via_LCA(dag, letters[1:6])
shortest_distances_directed(dag, letters[1:6])
longest_distances_directed(dag, letters[1:6])
}
