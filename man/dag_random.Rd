% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random.R
\name{dag_random}
\alias{dag_random}
\title{Generate a random DAG}
\usage{
dag_random(
  n_children = c(2, 5),
  max = 1000,
  p = 0.1,
  power = 0.2,
  tree = FALSE,
  depth = NULL
)
}
\arguments{
\item{n_children}{Range of the numbers of children on a term to sample.}

\item{max}{Maximal number of terms.}

\item{p}{Probability to connect to other terms.}

\item{power}{The power.}

\item{tree}{Whether the dag is a tree.}

\item{depth}{Depth of the tree. Note \code{tree} and \code{depth} should be both set. \code{dag(n_children = nc, tree = TRUE, depth = d)}
is a shortcut of \code{dag(n_children = c(nc, nc), max = nc^(d+1)/(nc-1), p = 0)}. The setting of \code{dag(n_children = 2, tree = TRUE, depth = d)}
generates a binary tree with max depth \code{d} and \code{2^d} leaf nodes all have the same depth \code{d}.}
}
\value{
An \code{ontology_DAG} object.
}
\description{
Generate a random DAG
}
\details{
It first generates a tree growing from the root. On each node, it has
a random number of children sampled from \code{n_children} and each child node
can extend with a probability of \code{1/(height^power)}.

In the second step, each node on the tree has a probability of \code{p} to link to other
terms in the tree.

The growing stops when the number of terms reaches \code{max} or there is no term can further extend.
}
\examples{
dag_random()
dag_random(p = 0)  # a tree
}
